name: Docker compose build

on:
  push:
    branches:
      - master
      - develop

jobs:
  Docker-development:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Create .env
      #   run: |
      #     echo 'DB_PORT=${{secrets.DB_PORT}}' > .env
      #     echo 'DB_USERNAME=${{secrets.DB_USERNAME}}' >> .env
      #     echo 'DB_PASSWORD=${{secrets.DB_PASSWORD}}' >> .env
      #     echo 'DB_ROOT_PASSWORD=${{secrets.DB_ROOT_PASSWORD}}' >> .env
      #     echo 'DB_PASSWORD=${{secrets.DB_NAME}}' >> .env
      - name: Build development
        run: docker-compose up -d development
  Docker-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Create .env
      #   run: |
      #     echo 'DB_PORT=${{secrets.DB_PORT}}' > .env
      #     echo 'DB_USERNAME=${{secrets.DB_USERNAME}}' >> .env
      #     echo 'DB_PASSWORD=${{secrets.DB_PASSWORD}}' >> .env
      #     echo 'DB_ROOT_PASSWORD=${{secrets.DB_ROOT_PASSWORD}}' >> .env
      #     echo 'DB_PASSWORD=${{secrets.DB_NAME}}' >> .env
      - name: Build test
        run: docker-compose up -d test
  Docker-production:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Create .env
      #   run: |
      #     echo 'DB_PORT=${{secrets.DB_PORT}}' > .env
      #     echo 'DB_USERNAME=${{secrets.DB_USERNAME}}' >> .env
      #     echo 'DB_PASSWORD=${{secrets.DB_PASSWORD}}' >> .env
      #     echo 'DB_ROOT_PASSWORD=${{secrets.DB_ROOT_PASSWORD}}' >> .env
      #     echo 'DB_PASSWORD=${{secrets.DB_NAME}}' >> .env
      - name: Build prod
        run: docker-compose up -d production
